name: 3 ) Terraform Apply

on:
  workflow_dispatch:
    inputs:
      confirm_apply:
        description: 'Type "apply" to confirm deployment'
        required: true
        type: string
      env:
        description: "Environment"
        required: true
        type: choice
        options: [dev, prod]
        default: dev

permissions:
  contents: read
  id-token: write

jobs:
  terraform_apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_apply == 'apply'

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - uses: actions/checkout@v4

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_OIDC_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download tfvars from S3
        run: |
          mkdir -p env
          aws s3 cp "s3://${{ secrets.TERRAFORM_STATE_BUCKET }}/env/${{ github.event.inputs.env }}.tfvars" \
                    "env/${{ github.event.inputs.env }}.tfvars"

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.x"

      - name: Terraform init (remote backend)
        run: terraform init -reconfigure -input=false

      - name: Workspace select/create
        run: terraform workspace select -or-create=true "${{ github.event.inputs.env }}"

      - uses: actions/download-artifact@v4
        with:
          name: terraform-plan-${{ github.event.inputs.env }}
          path: terraform

      - name: Terraform apply (using saved plan)
        run: terraform apply -input=false -auto-approve terraform/tfplan
