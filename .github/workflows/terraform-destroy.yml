name: 4 )  Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "destroy" to confirm deletion of all resources'
        required: true
        type: string
      env:
        description: 'Environment (dev/prod)'
        required: true
        type: choice
        options: [dev, prod]
      container_image:
        description: "Full ECR image URI (e.g. 123456.dkr.ecr.eu-west-1.amazonaws.com/app/service:tag or ...@sha256:...)"
        required: true
        type: string

permissions:
  contents: read
  id-token: write

jobs:
  terraform_destroy:
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_destroy == 'destroy'
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_OIDC_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}


      - name: Download tfvars from S3
        run: |
          mkdir -p env
          aws s3 cp "s3://${{ secrets.TERRAFORM_STATE_BUCKET }}/env/${{ github.event.inputs.env }}.tfvars" \
                    "env/${{ github.event.inputs.env }}.tfvars"

      - run: |
          mkdir -p env
          aws s3 cp "s3://${{ secrets.TERRAFORM_STATE_BUCKET }}/env/${{ github.event.inputs.env }}.tfvars" "env/${{ github.event.inputs.env }}.tfvars"
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.x"
      - run: |
          terraform init -input=false \
            -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
            -backend-config="key=terraform.tfstate" \
            -backend-config="workspace_key_prefix=env" \
            -backend-config="region=${{ secrets.AWS_REGION }}"


      - name: Workspace select/create
        run: terraform workspace select -or-create=true "${{ github.event.inputs.env }}"

      - name: Terraform destroy
        run: terraform destroy -input=false -var-file="env/${{ github.event.inputs.env }}.tfvars" -auto-approve

  delete_ecr_image:
    runs-on: ubuntu-latest
    needs: terraform_destroy
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_OIDC_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}
      - run: |
          IMAGE="${{ github.event.inputs.container_image }}"
          REPOSITORY=$(printf "%s" "$IMAGE" | cut -d'/' -f2- | cut -d'@' -f1 | cut -d':' -f1)
          if [[ "$IMAGE" == *@* ]]; then
            ID="imageDigest=${IMAGE##*@}"
          else
            ID="imageTag=${IMAGE##*:}"
          fi
          aws ecr batch-delete-image --repository-name "$REPOSITORY" --image-ids "$ID"
