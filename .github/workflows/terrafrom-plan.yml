name: Terraform Plan

on:
  workflow_dispatch:
    inputs:
      container_image:
        description: "Full ECR image URI (e.g., 123456789012.dkr.ecr.us-east-1.amazonaws.com/my-app:latest)"
        required: true
        type: string
      env:
        description: 'Environment (dev/prod)'
        required: true
        type: choice
        options:
          - 'dev'
          - 'prod'
        default: 'dev'

permissions:
  contents: read
  id-token: write

jobs:
  terraform_plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform

    env:
      ENV_NAME: ${{ github.event.inputs.env }}
      BUCKET_NAME: ${{ secrets.TERRAFORM_STATE_BUCKET }}




    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_OIDC_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Download tfvars from S3
        env:
          ENV_NAME: ${{ github.event.inputs.env }}
          BUCKET_NAME: ${{ secrets.TERRAFORM_STATE_BUCKET }}
        run: |
          mkdir -p env
          aws s3 cp s3://${BUCKET_NAME}/env/${ENV_NAME}.tfvars env/${ENV_NAME}.tfvars

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.6.x"

      - name: Terraform Init
        run: |
          terraform init -input=false \
            -backend-config="bucket=${{ secrets.TERRAFORM_STATE_BUCKET }}" \
            -backend-config="key=${{ github.event.inputs.env }}/terraform.tfstate" \
            -backend-config="region=${{ secrets.AWS_REGION }}"

      - name: Select or Create Workspace
        env:
          ENV_NAME: ${{ github.event.inputs.env }}
        run: terraform workspace select $ENV_NAME || terraform workspace new $ENV_NAME

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Format Check
        run: terraform fmt -check -recursive

      - name: Set up TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: latest

      - name: Initialize TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint --recursive --format compact

      - name: Terraform Plan
        env:
          TF_VAR_container_image: ${{ github.event.inputs.container_image }}
          ENV_NAME: ${{ github.event.inputs.env }}
        run: |
          terraform plan -input=false \
            -var-file="env/${ENV_NAME}.tfvars" \
            -out=tfplan

      - name: Upload Terraform Plan (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/tfplan
          retention-days: 1

      - name: Upload Plan to S3
        run: aws s3 cp terraform/tfplan "s3://${BUCKET_NAME}/tfplans/${ENV_NAME}-tfplan"
